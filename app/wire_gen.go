// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"context"
	"github.com/google/wire"
	"go.uber.org/zap"
	"grpc/account/config"
	"grpc/account/internal/service"
)

// Injectors from wire.go:

func InitializeApp(cfg *config.Config) (*service.Service, error) {
	context := provideContext()
	logger, err := provideLogger()
	if err != nil {
		return nil, err
	}
	serviceService := service.NewService(context, cfg, logger)
	return serviceService, nil
}

// wire.go:

// Provide context
func provideContext() context.Context {
	return context.Background()
}

// Provide logger
func provideLogger() (*zap.Logger, error) {
	return zap.NewDevelopment()
}

var AppSet = wire.NewSet(
	provideContext,
	provideLogger,
)
