// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"context"
	"github.com/convitnhodev/common/logging"
	"github.com/google/wire"
	"grpc/account/config"
	"grpc/account/internal/service"
)

// Injectors from wire.go:

func InitializeApp(cfg *config.Config) (*service.Service, error) {
	context := provideContext()
	loggingConfig := provideLoggerConfig(cfg)
	sugaredLogger := logging.NewLogger(loggingConfig)
	serviceService := service.NewService(context, cfg, sugaredLogger)
	return serviceService, nil
}

// wire.go:

// Provide context
func provideContext() context.Context {
	return context.Background()
}

// Provide logger config
func provideLoggerConfig(cfg *config.Config) *logging.Config {
	return cfg.Loggerconfig
}

var AppSet = wire.NewSet(
	provideContext,
	provideLoggerConfig,
)
